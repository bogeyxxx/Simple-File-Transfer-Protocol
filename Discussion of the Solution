In this protocol, myftpd(the server) is running which goes into demon state to make various simultaneous child servers for taking care of numerous client requests. It handles command from clients such as pwd, cd, dir and get etc. The command are executed within serve_server() function inside server program and reply back to client program. At the point when a customer requests finished, its simultaneous child servers will likewise be ended. 
Client program (myftp), which is joined with the server program through TCP_PORT and requested commands, for example, lpwd,ldir,lcd and so on were likewise coded into the system so it can execute request locally all alone without involving with the server program. Myftp program decides the command to be executed locally or remotely with the server. If the command has “l” in front where “l” stands for local, client program will handle the command. If not, client write to server to handle and wait for reply. 
I have implemented “token” in both the server and client program. Token make it easier to differentiate the command and the text followed by such as file name or directory. For example, when user type “get ser”, token is used to distinct user input into “get” and “ser” which are separated by space. Moreover, both programs have file read and write operation to perform command like “get” and “put”. 
The strong point of this program is that there is no hardcoded directory to perform operation like “cd” and “lcd”. The use of token simplifies in getting the command right. There is weakness in this program such as transferring large file size is not available. “put” command need to be improved to work on Ceto server.
