Inside myftpd program, server was allocated with one server TCP_PORT which is between 1024 and 65536, creating communicating end point. Socket system int socket(int family,in type, int protocol) were built and bind the server address to the socket(int bind(int sd,struct sockadd *addr,int addrlen)). The protocol is usually set as 0 and implied in first two arguments. At that point, demon process is initiated by making child servers to listen requests from client.  The demon is made to keep the process running even after the program is terminated. The program is designed to listen clients’ requests by binding socket and its address to perform 5 client’s requests from a client server at the same time. 
The client program implements “gethostname” to retrieve server name and “TCP_PORT” to get server port number. The port number is used in creating TCP sockets to establish connection between client and server program. Upon successfully connection, the client starts prompting user to enter command. Some commands are executed locally where some are sent to server to perform execution. The program will terminate when user command “quit”.
Both myftp and myftpd used stream like protocol to read and write data which are transferred through TCP sockets. When client send commands or messages to servers, the data passes to server with a structure like (socket descriptor,data,data size). When the server receives client data then it reads the socket address and retrieves data from it.  After the data is being proceeded, server send back to client through same socket address with its executed data and formats. If the executed data is too big, it broken down into smaller packages and send package by package. The client won’t be able to see those packages until it is assembled into original format.

